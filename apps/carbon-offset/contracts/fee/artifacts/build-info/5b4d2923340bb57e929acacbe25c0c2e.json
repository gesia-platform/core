{
	"id": "5b4d2923340bb57e929acacbe25c0c2e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fee/FeeManager.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IFeeManager.sol\";\nimport \"../operator/IOperator.sol\";\nimport \"../utils/SafeMath.sol\";\n\ncontract FeeManager is IFeeManager {\n    using SafeMath for uint256;\n    uint256 public feePercentage; // 5 -> 0.5% , 50 -> 5%, 500 -> 50%\n    address public operatorManager;\n    address public feeWalletAddress;\n\n    event ChangeFeeAddress(address _feeAddress);\n    event ChangeFeePercentage(uint256 _feePercentage);\n\n    modifier operatorsOnly() {\n        require(IOperator(operatorManager).isOperator(msg.sender), \"#operatorsOnly:\");\n        _;\n    }\n\n    constructor(address _operatorManager, address _feeAddress, uint256 _feePercentage){\n        operatorManager = _operatorManager;\n        feeWalletAddress = _feeAddress;\n        feePercentage = _feePercentage;\n    }\n\n    function changeFeeAddress(address _feeAddress) external operatorsOnly {\n        feeWalletAddress = _feeAddress;\n        emit ChangeFeeAddress(_feeAddress);\n    }\n\n    function changeFeePercentage(uint256 _feePercentage) external operatorsOnly {\n        feePercentage = _feePercentage;\n        emit ChangeFeePercentage(_feePercentage);\n    }\n\n    function feeAmount(uint256 _feeAmount) external view override returns (uint256) {\n        return _feeAmount.mul(feePercentage).div(1000);\n    }\n\n    function feeAddress() external view override returns (address) {\n        return feeWalletAddress;\n    }\n\n}\n"
			},
			"contracts/utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/operator/IOperator.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ninterface IOperator {\n    function isOperator(address _account) external view returns (bool);\n}\n"
			},
			"contracts/fee/IFeeManager.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\ninterface IFeeManager {\n    function feeAmount(uint256 _amount) external view returns (uint256);\n    function feeAddress() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fee/FeeManager.sol": {
				"FeeManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operatorManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feePercentage",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								}
							],
							"name": "ChangeFeeAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_feePercentage",
									"type": "uint256"
								}
							],
							"name": "ChangeFeePercentage",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeAddress",
									"type": "address"
								}
							],
							"name": "changeFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercentage",
									"type": "uint256"
								}
							],
							"name": "changeFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feeAmount",
									"type": "uint256"
								}
							],
							"name": "feeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeWalletAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operatorManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fee/FeeManager.sol\":214:1492  contract FeeManager is IFeeManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fee/FeeManager.sol\":672:885  constructor(address _operatorManager, address _feeAddress, uint256 _feePercentage){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/fee/FeeManager.sol\":782:798  _operatorManager */\n  dup3\n    /* \"contracts/fee/FeeManager.sol\":764:779  operatorManager */\n  0x01\n  0x00\n    /* \"contracts/fee/FeeManager.sol\":764:798  operatorManager = _operatorManager */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/fee/FeeManager.sol\":827:838  _feeAddress */\n  dup2\n    /* \"contracts/fee/FeeManager.sol\":808:824  feeWalletAddress */\n  0x02\n  0x00\n    /* \"contracts/fee/FeeManager.sol\":808:838  feeWalletAddress = _feeAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/fee/FeeManager.sol\":864:878  _feePercentage */\n  dup1\n    /* \"contracts/fee/FeeManager.sol\":848:861  feePercentage */\n  0x00\n    /* \"contracts/fee/FeeManager.sol\":848:878  feePercentage = _feePercentage */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/fee/FeeManager.sol\":672:885  constructor(address _operatorManager, address _feeAddress, uint256 _feePercentage){... */\n  pop\n  pop\n  pop\n    /* \"contracts/fee/FeeManager.sol\":214:1492  contract FeeManager is IFeeManager {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_14:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_15:\n    /* \"#utility.yul\":1001:1025   */\n  tag_31\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_14\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_32:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_16:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_15\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_37\n  tag_8\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1326:1445   */\ntag_36:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_38\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_13\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_39\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_40\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"contracts/fee/FeeManager.sol\":214:1492  contract FeeManager is IFeeManager {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fee/FeeManager.sol\":214:1492  contract FeeManager is IFeeManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41275358\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x41275358\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c852657\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa001ecdd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfae14192\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x08a300cb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x285e1406\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f84c96f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fee/FeeManager.sol\":393:424  address public feeWalletAddress */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fee/FeeManager.sol\":891:1052  function changeFeeAddress(address _feeAddress) external operatorsOnly {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/fee/FeeManager.sol\":357:387  address public operatorManager */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fee/FeeManager.sol\":1386:1489  function feeAddress() external view override returns (address) {... */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fee/FeeManager.sol\":1237:1380  function feeAmount(uint256 _feeAmount) external view override returns (uint256) {... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fee/FeeManager.sol\":287:315  uint256 public feePercentage */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fee/FeeManager.sol\":1058:1231  function changeFeePercentage(uint256 _feePercentage) external operatorsOnly {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/fee/FeeManager.sol\":393:424  address public feeWalletAddress */\n    tag_12:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":891:1052  function changeFeeAddress(address _feeAddress) external operatorsOnly {... */\n    tag_18:\n        /* \"contracts/fee/FeeManager.sol\":589:604  operatorManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fee/FeeManager.sol\":579:616  IOperator(operatorManager).isOperator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d70f7ae\n        /* \"contracts/fee/FeeManager.sol\":617:627  msg.sender */\n      caller\n        /* \"contracts/fee/FeeManager.sol\":579:628  IOperator(operatorManager).isOperator(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_38:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/fee/FeeManager.sol\":571:648  require(IOperator(operatorManager).isOperator(msg.sender), \"#operatorsOnly:\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/fee/FeeManager.sol\":990:1001  _feeAddress */\n      dup1\n        /* \"contracts/fee/FeeManager.sol\":971:987  feeWalletAddress */\n      0x02\n      0x00\n        /* \"contracts/fee/FeeManager.sol\":971:1001  feeWalletAddress = _feeAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/fee/FeeManager.sol\":1016:1045  ChangeFeeAddress(_feeAddress) */\n      0x65e29051085f9b7dd780038722c09ab1443e323345b86bd862699a2881757f0c\n        /* \"contracts/fee/FeeManager.sol\":1033:1044  _feeAddress */\n      dup2\n        /* \"contracts/fee/FeeManager.sol\":1016:1045  ChangeFeeAddress(_feeAddress) */\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/fee/FeeManager.sol\":891:1052  function changeFeeAddress(address _feeAddress) external operatorsOnly {... */\n      pop\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":357:387  address public operatorManager */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":1386:1489  function feeAddress() external view override returns (address) {... */\n    tag_23:\n        /* \"contracts/fee/FeeManager.sol\":1440:1447  address */\n      0x00\n        /* \"contracts/fee/FeeManager.sol\":1466:1482  feeWalletAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fee/FeeManager.sol\":1459:1482  return feeWalletAddress */\n      swap1\n      pop\n        /* \"contracts/fee/FeeManager.sol\":1386:1489  function feeAddress() external view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":1237:1380  function feeAmount(uint256 _feeAmount) external view override returns (uint256) {... */\n    tag_28:\n        /* \"contracts/fee/FeeManager.sol\":1308:1315  uint256 */\n      0x00\n        /* \"contracts/fee/FeeManager.sol\":1334:1373  _feeAmount.mul(feePercentage).div(1000) */\n      tag_50\n        /* \"contracts/fee/FeeManager.sol\":1368:1372  1000 */\n      0x03e8\n        /* \"contracts/fee/FeeManager.sol\":1334:1363  _feeAmount.mul(feePercentage) */\n      tag_51\n        /* \"contracts/fee/FeeManager.sol\":1349:1362  feePercentage */\n      sload(0x00)\n        /* \"contracts/fee/FeeManager.sol\":1334:1344  _feeAmount */\n      dup6\n        /* \"contracts/fee/FeeManager.sol\":1334:1348  _feeAmount.mul */\n      tag_52\n      swap1\n        /* \"contracts/fee/FeeManager.sol\":1334:1363  _feeAmount.mul(feePercentage) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"contracts/fee/FeeManager.sol\":1334:1367  _feeAmount.mul(feePercentage).div */\n      tag_53\n      swap1\n        /* \"contracts/fee/FeeManager.sol\":1334:1373  _feeAmount.mul(feePercentage).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_50:\n        /* \"contracts/fee/FeeManager.sol\":1327:1373  return _feeAmount.mul(feePercentage).div(1000) */\n      swap1\n      pop\n        /* \"contracts/fee/FeeManager.sol\":1237:1380  function feeAmount(uint256 _feeAmount) external view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":287:315  uint256 public feePercentage */\n    tag_32:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/fee/FeeManager.sol\":1058:1231  function changeFeePercentage(uint256 _feePercentage) external operatorsOnly {... */\n    tag_36:\n        /* \"contracts/fee/FeeManager.sol\":589:604  operatorManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/fee/FeeManager.sol\":579:616  IOperator(operatorManager).isOperator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6d70f7ae\n        /* \"contracts/fee/FeeManager.sol\":617:627  msg.sender */\n      caller\n        /* \"contracts/fee/FeeManager.sol\":579:628  IOperator(operatorManager).isOperator(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_58:\n        /* \"contracts/fee/FeeManager.sol\":571:648  require(IOperator(operatorManager).isOperator(msg.sender), \"#operatorsOnly:\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_45\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/fee/FeeManager.sol\":1160:1174  _feePercentage */\n      dup1\n        /* \"contracts/fee/FeeManager.sol\":1144:1157  feePercentage */\n      0x00\n        /* \"contracts/fee/FeeManager.sol\":1144:1174  feePercentage = _feePercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fee/FeeManager.sol\":1189:1224  ChangeFeePercentage(_feePercentage) */\n      0xc8c62ec399ed7e0e53a364f8097bd498861878e5529b22d32134a54d835a927e\n        /* \"contracts/fee/FeeManager.sol\":1209:1223  _feePercentage */\n      dup2\n        /* \"contracts/fee/FeeManager.sol\":1189:1224  ChangeFeePercentage(_feePercentage) */\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/fee/FeeManager.sol\":1058:1231  function changeFeePercentage(uint256 _feePercentage) external operatorsOnly {... */\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"contracts/utils/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"contracts/utils/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3549:3554  a * b */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/utils/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"contracts/utils/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"contracts/utils/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"contracts/utils/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"contracts/utils/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"contracts/utils/SafeMath.sol\":3934:3939  a / b */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/utils/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_69:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_70:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_92\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_71:\n        /* \"#utility.yul\":328:352   */\n      tag_94\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_70\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_96\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_71\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_73:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_75:\n        /* \"#utility.yul\":993:1017   */\n      tag_101\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_70\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_102:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_76:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_104\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_75\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_17:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_107\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1269:1388   */\n    tag_106:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_108\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_76\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1605   */\n    tag_77:\n        /* \"#utility.yul\":1565:1572   */\n      0x00\n        /* \"#utility.yul\":1594:1599   */\n      dup2\n        /* \"#utility.yul\":1583:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_78:\n        /* \"#utility.yul\":1684:1708   */\n      tag_111\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_112:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_79:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_114\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_78\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_27:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_117\n      tag_73\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1960:2079   */\n    tag_116:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_118\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_79\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_80:\n        /* \"#utility.yul\":2306:2330   */\n      tag_120\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_77\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2565   */\n    tag_30:\n        /* \"#utility.yul\":2436:2440   */\n      0x00\n        /* \"#utility.yul\":2474:2476   */\n      0x20\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2477   */\n      add\n        /* \"#utility.yul\":2451:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2487:2558   */\n      tag_122\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2544:2553   */\n      dup4\n        /* \"#utility.yul\":2540:2557   */\n      add\n        /* \"#utility.yul\":2531:2537   */\n      dup5\n        /* \"#utility.yul\":2487:2558   */\n      tag_80\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2343:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2661   */\n    tag_81:\n        /* \"#utility.yul\":2605:2612   */\n      0x00\n        /* \"#utility.yul\":2648:2653   */\n      dup2\n        /* \"#utility.yul\":2641:2654   */\n      iszero\n        /* \"#utility.yul\":2634:2655   */\n      iszero\n        /* \"#utility.yul\":2623:2655   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:2783   */\n    tag_82:\n        /* \"#utility.yul\":2737:2758   */\n      tag_125\n        /* \"#utility.yul\":2752:2757   */\n      dup2\n        /* \"#utility.yul\":2737:2758   */\n      tag_81\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2730:2735   */\n      dup2\n        /* \"#utility.yul\":2727:2759   */\n      eq\n        /* \"#utility.yul\":2717:2777   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2773:2774   */\n      0x00\n        /* \"#utility.yul\":2770:2771   */\n      dup1\n        /* \"#utility.yul\":2763:2775   */\n      revert\n        /* \"#utility.yul\":2717:2777   */\n    tag_126:\n        /* \"#utility.yul\":2667:2783   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2789:2926   */\n    tag_83:\n        /* \"#utility.yul\":2843:2848   */\n      0x00\n        /* \"#utility.yul\":2874:2880   */\n      dup2\n        /* \"#utility.yul\":2868:2881   */\n      mload\n        /* \"#utility.yul\":2859:2881   */\n      swap1\n      pop\n        /* \"#utility.yul\":2890:2920   */\n      tag_128\n        /* \"#utility.yul\":2914:2919   */\n      dup2\n        /* \"#utility.yul\":2890:2920   */\n      tag_82\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2789:2926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2932:3277   */\n    tag_42:\n        /* \"#utility.yul\":2999:3005   */\n      0x00\n        /* \"#utility.yul\":3048:3050   */\n      0x20\n        /* \"#utility.yul\":3036:3045   */\n      dup3\n        /* \"#utility.yul\":3027:3034   */\n      dup5\n        /* \"#utility.yul\":3023:3046   */\n      sub\n        /* \"#utility.yul\":3019:3051   */\n      slt\n        /* \"#utility.yul\":3016:3135   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":3054:3133   */\n      tag_131\n      tag_73\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3016:3135   */\n    tag_130:\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3199:3260   */\n      tag_132\n        /* \"#utility.yul\":3252:3259   */\n      dup5\n        /* \"#utility.yul\":3243:3249   */\n      dup3\n        /* \"#utility.yul\":3232:3241   */\n      dup6\n        /* \"#utility.yul\":3228:3250   */\n      add\n        /* \"#utility.yul\":3199:3260   */\n      tag_83\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3189:3260   */\n      swap2\n      pop\n        /* \"#utility.yul\":3145:3270   */\n      pop\n        /* \"#utility.yul\":2932:3277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3283:3452   */\n    tag_84:\n        /* \"#utility.yul\":3367:3378   */\n      0x00\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3396:3399   */\n      dup3\n        /* \"#utility.yul\":3389:3408   */\n      mstore\n        /* \"#utility.yul\":3441:3445   */\n      0x20\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3432:3446   */\n      add\n        /* \"#utility.yul\":3417:3446   */\n      swap1\n      pop\n        /* \"#utility.yul\":3283:3452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3458:3623   */\n    tag_85:\n        /* \"#utility.yul\":3598:3615   */\n      0x236f70657261746f72734f6e6c793a0000000000000000000000000000000000\n        /* \"#utility.yul\":3594:3595   */\n      0x00\n        /* \"#utility.yul\":3586:3592   */\n      dup3\n        /* \"#utility.yul\":3582:3596   */\n      add\n        /* \"#utility.yul\":3575:3616   */\n      mstore\n        /* \"#utility.yul\":3458:3623   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3629:3995   */\n    tag_86:\n        /* \"#utility.yul\":3771:3774   */\n      0x00\n        /* \"#utility.yul\":3792:3859   */\n      tag_136\n        /* \"#utility.yul\":3856:3858   */\n      0x0f\n        /* \"#utility.yul\":3851:3854   */\n      dup4\n        /* \"#utility.yul\":3792:3859   */\n      tag_84\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3785:3859   */\n      swap2\n      pop\n        /* \"#utility.yul\":3868:3961   */\n      tag_137\n        /* \"#utility.yul\":3957:3960   */\n      dup3\n        /* \"#utility.yul\":3868:3961   */\n      tag_85\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3986:3988   */\n      0x20\n        /* \"#utility.yul\":3981:3984   */\n      dup3\n        /* \"#utility.yul\":3977:3989   */\n      add\n        /* \"#utility.yul\":3970:3989   */\n      swap1\n      pop\n        /* \"#utility.yul\":3629:3995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4001:4420   */\n    tag_45:\n        /* \"#utility.yul\":4167:4171   */\n      0x00\n        /* \"#utility.yul\":4205:4207   */\n      0x20\n        /* \"#utility.yul\":4194:4203   */\n      dup3\n        /* \"#utility.yul\":4190:4208   */\n      add\n        /* \"#utility.yul\":4182:4208   */\n      swap1\n      pop\n        /* \"#utility.yul\":4254:4263   */\n      dup2\n        /* \"#utility.yul\":4248:4252   */\n      dup2\n        /* \"#utility.yul\":4244:4264   */\n      sub\n        /* \"#utility.yul\":4240:4241   */\n      0x00\n        /* \"#utility.yul\":4229:4238   */\n      dup4\n        /* \"#utility.yul\":4225:4242   */\n      add\n        /* \"#utility.yul\":4218:4265   */\n      mstore\n        /* \"#utility.yul\":4282:4413   */\n      tag_139\n        /* \"#utility.yul\":4408:4412   */\n      dup2\n        /* \"#utility.yul\":4282:4413   */\n      tag_86\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4274:4413   */\n      swap1\n      pop\n        /* \"#utility.yul\":4001:4420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4426:4606   */\n    tag_87:\n        /* \"#utility.yul\":4474:4551   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4471:4472   */\n      0x00\n        /* \"#utility.yul\":4464:4552   */\n      mstore\n        /* \"#utility.yul\":4571:4575   */\n      0x11\n        /* \"#utility.yul\":4568:4569   */\n      0x04\n        /* \"#utility.yul\":4561:4576   */\n      mstore\n        /* \"#utility.yul\":4595:4599   */\n      0x24\n        /* \"#utility.yul\":4592:4593   */\n      0x00\n        /* \"#utility.yul\":4585:4600   */\n      revert\n        /* \"#utility.yul\":4612:5022   */\n    tag_65:\n        /* \"#utility.yul\":4652:4659   */\n      0x00\n        /* \"#utility.yul\":4675:4695   */\n      tag_142\n        /* \"#utility.yul\":4693:4694   */\n      dup3\n        /* \"#utility.yul\":4675:4695   */\n      tag_77\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4670:4695   */\n      swap2\n      pop\n        /* \"#utility.yul\":4709:4729   */\n      tag_143\n        /* \"#utility.yul\":4727:4728   */\n      dup4\n        /* \"#utility.yul\":4709:4729   */\n      tag_77\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4704:4729   */\n      swap3\n      pop\n        /* \"#utility.yul\":4764:4765   */\n      dup3\n        /* \"#utility.yul\":4761:4762   */\n      dup3\n        /* \"#utility.yul\":4757:4766   */\n      mul\n        /* \"#utility.yul\":4786:4816   */\n      tag_144\n        /* \"#utility.yul\":4804:4815   */\n      dup2\n        /* \"#utility.yul\":4786:4816   */\n      tag_77\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4775:4816   */\n      swap2\n      pop\n        /* \"#utility.yul\":4965:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4963   */\n      dup3\n        /* \"#utility.yul\":4952:4967   */\n      div\n        /* \"#utility.yul\":4949:4950   */\n      dup5\n        /* \"#utility.yul\":4946:4968   */\n      eq\n        /* \"#utility.yul\":4926:4927   */\n      dup4\n        /* \"#utility.yul\":4919:4928   */\n      iszero\n        /* \"#utility.yul\":4899:4982   */\n      or\n        /* \"#utility.yul\":4876:5015   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":4995:5013   */\n      tag_146\n      tag_87\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4876:5015   */\n    tag_145:\n        /* \"#utility.yul\":4660:5022   */\n      pop\n        /* \"#utility.yul\":4612:5022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5028:5208   */\n    tag_88:\n        /* \"#utility.yul\":5076:5153   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5073:5074   */\n      0x00\n        /* \"#utility.yul\":5066:5154   */\n      mstore\n        /* \"#utility.yul\":5173:5177   */\n      0x12\n        /* \"#utility.yul\":5170:5171   */\n      0x04\n        /* \"#utility.yul\":5163:5178   */\n      mstore\n        /* \"#utility.yul\":5197:5201   */\n      0x24\n        /* \"#utility.yul\":5194:5195   */\n      0x00\n        /* \"#utility.yul\":5187:5202   */\n      revert\n        /* \"#utility.yul\":5214:5399   */\n    tag_68:\n        /* \"#utility.yul\":5254:5255   */\n      0x00\n        /* \"#utility.yul\":5271:5291   */\n      tag_149\n        /* \"#utility.yul\":5289:5290   */\n      dup3\n        /* \"#utility.yul\":5271:5291   */\n      tag_77\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5266:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":5305:5325   */\n      tag_150\n        /* \"#utility.yul\":5323:5324   */\n      dup4\n        /* \"#utility.yul\":5305:5325   */\n      tag_77\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":5300:5325   */\n      swap3\n      pop\n        /* \"#utility.yul\":5344:5345   */\n      dup3\n        /* \"#utility.yul\":5334:5369   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":5349:5367   */\n      tag_152\n      tag_88\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5334:5369   */\n    tag_151:\n        /* \"#utility.yul\":5391:5392   */\n      dup3\n        /* \"#utility.yul\":5388:5389   */\n      dup3\n        /* \"#utility.yul\":5384:5393   */\n      div\n        /* \"#utility.yul\":5379:5393   */\n      swap1\n      pop\n        /* \"#utility.yul\":5214:5399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220212b30855a8937a8958ff531b596b48c76aacf764f9e4ad8c7aac0dc89310ce064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1871:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:6",
														"type": ""
													}
												],
												"src": "845:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:6"
															},
															"nodeType": "YulIf",
															"src": "1326:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:6",
														"type": ""
													}
												],
												"src": "1205:663:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161099c38038061099c8339818101604052810190610032919061015c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000819055505050506101af565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f3826100c8565b9050919050565b610103816100e8565b811461010e57600080fd5b50565b600081519050610120816100fa565b92915050565b6000819050919050565b61013981610126565b811461014457600080fd5b50565b60008151905061015681610130565b92915050565b600080600060608486031215610175576101746100c3565b5b600061018386828701610111565b935050602061019486828701610111565b92505060406101a586828701610147565b9150509250925092565b6107de806101be6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063412753581161005b57806341275358146100da5780636c852657146100f8578063a001ecdd14610128578063fae14192146101465761007d565b806308a300cb14610082578063285e1406146100a05780632f84c96f146100bc575b600080fd5b61008a610162565b60405161009791906104ef565b60405180910390f35b6100ba60048036038101906100b5919061053b565b610188565b005b6100c46102de565b6040516100d191906104ef565b60405180910390f35b6100e2610304565b6040516100ef91906104ef565b60405180910390f35b610112600480360381019061010d919061059e565b61032e565b60405161011f91906105da565b60405180910390f35b610130610360565b60405161013d91906105da565b60405180910390f35b610160600480360381019061015b919061059e565b610366565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d70f7ae336040518263ffffffff1660e01b81526004016101e391906104ef565b602060405180830381865afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061062d565b610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a906106b7565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f65e29051085f9b7dd780038722c09ab1443e323345b86bd862699a2881757f0c816040516102d391906104ef565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006103596103e861034b6000548561048290919063ffffffff16565b61049890919063ffffffff16565b9050919050565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d70f7ae336040518263ffffffff1660e01b81526004016103c191906104ef565b602060405180830381865afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061062d565b610441576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610438906106b7565b60405180910390fd5b806000819055507fc8c62ec399ed7e0e53a364f8097bd498861878e5529b22d32134a54d835a927e8160405161047791906105da565b60405180910390a150565b600081836104909190610706565b905092915050565b600081836104a69190610777565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d9826104ae565b9050919050565b6104e9816104ce565b82525050565b600060208201905061050460008301846104e0565b92915050565b600080fd5b610518816104ce565b811461052357600080fd5b50565b6000813590506105358161050f565b92915050565b6000602082840312156105515761055061050a565b5b600061055f84828501610526565b91505092915050565b6000819050919050565b61057b81610568565b811461058657600080fd5b50565b60008135905061059881610572565b92915050565b6000602082840312156105b4576105b361050a565b5b60006105c284828501610589565b91505092915050565b6105d481610568565b82525050565b60006020820190506105ef60008301846105cb565b92915050565b60008115159050919050565b61060a816105f5565b811461061557600080fd5b50565b60008151905061062781610601565b92915050565b6000602082840312156106435761064261050a565b5b600061065184828501610618565b91505092915050565b600082825260208201905092915050565b7f236f70657261746f72734f6e6c793a0000000000000000000000000000000000600082015250565b60006106a1600f8361065a565b91506106ac8261066b565b602082019050919050565b600060208201905081810360008301526106d081610694565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071182610568565b915061071c83610568565b925082820261072a81610568565b91508282048414831517610741576107406106d7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061078282610568565b915061078d83610568565b92508261079d5761079c610748565b5b82820490509291505056fea2646970667358221220212b30855a8937a8958ff531b596b48c76aacf764f9e4ad8c7aac0dc89310ce064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x99C CODESIZE SUB DUP1 PUSH2 0x99C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x15C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103 DUP2 PUSH2 0xE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0x126 JUMP JUMPDEST DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x156 DUP2 PUSH2 0x130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x175 JUMPI PUSH2 0x174 PUSH2 0xC3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x183 DUP7 DUP3 DUP8 ADD PUSH2 0x111 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x194 DUP7 DUP3 DUP8 ADD PUSH2 0x111 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A5 DUP7 DUP3 DUP8 ADD PUSH2 0x147 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x7DE DUP1 PUSH2 0x1BE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41275358 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x6C852657 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xFAE14192 EQ PUSH2 0x146 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8A300CB EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x285E1406 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2F84C96F EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x65E29051085F9B7DD780038722C09AB1443E323345B86BD862699A2881757F0C DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359 PUSH2 0x3E8 PUSH2 0x34B PUSH1 0x0 SLOAD DUP6 PUSH2 0x482 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x498 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC8C62EC399ED7E0E53A364F8097BD498861878E5529B22D32134A54D835A927E DUP2 PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9 DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E9 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x504 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP2 EQ PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x535 DUP2 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x551 JUMPI PUSH2 0x550 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x55F DUP5 DUP3 DUP6 ADD PUSH2 0x526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0x568 JUMP JUMPDEST DUP2 EQ PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x598 DUP2 PUSH2 0x572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C2 DUP5 DUP3 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D4 DUP2 PUSH2 0x568 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60A DUP2 PUSH2 0x5F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x627 DUP2 PUSH2 0x601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x651 DUP5 DUP3 DUP6 ADD PUSH2 0x618 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x236F70657261746F72734F6E6C793A0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A1 PUSH1 0xF DUP4 PUSH2 0x65A JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP PUSH2 0x71C DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x72A DUP2 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x741 JUMPI PUSH2 0x740 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x782 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP PUSH2 0x78D DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2B ADDRESS DUP6 GAS DUP10 CALLDATACOPY 0xA8 SWAP6 DUP16 CREATE2 BALANCE 0xB5 SWAP7 0xB4 DUP13 PUSH23 0xAACF764F9E4AD8C7AAC0DC89310CE064736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "214:1278:2:-:0;;;672:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;782:16;764:15;;:34;;;;;;;;;;;;;;;;;;827:11;808:16;;:30;;;;;;;;;;;;;;;;;;864:14;848:13;:30;;;;672:213;;;214:1278;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;214:1278:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeFeeAddress_220": {
									"entryPoint": 392,
									"id": 220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeFeePercentage_236": {
									"entryPoint": 870,
									"id": 236,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_509": {
									"entryPoint": 1176,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeAddress_262": {
									"entryPoint": 772,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeAmount_253": {
									"entryPoint": 814,
									"id": 253,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@feePercentage_155": {
									"entryPoint": 864,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeWalletAddress_159": {
									"entryPoint": 354,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_494": {
									"entryPoint": 1154,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@operatorManager_157": {
									"entryPoint": 734,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1864,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5402:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:6",
														"type": ""
													}
												],
												"src": "593:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:6"
															},
															"nodeType": "YulIf",
															"src": "973:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:6",
														"type": ""
													}
												],
												"src": "920:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:6",
														"type": ""
													}
												],
												"src": "1048:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:6"
															},
															"nodeType": "YulIf",
															"src": "1269:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:6",
														"type": ""
													}
												],
												"src": "1193:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1583:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1594:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1583:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1555:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1565:7:6",
														"type": ""
													}
												],
												"src": "1528:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:6"
															},
															"nodeType": "YulIf",
															"src": "1664:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													}
												],
												"src": "1611:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:6",
														"type": ""
													}
												],
												"src": "1739:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:6"
															},
															"nodeType": "YulIf",
															"src": "1960:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:6",
														"type": ""
													}
												],
												"src": "1884:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:6",
														"type": ""
													}
												],
												"src": "2219:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2441:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2451:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2474:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2451:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2531:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2555:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2540:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2487:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2425:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2436:4:6",
														"type": ""
													}
												],
												"src": "2343:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2613:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2623:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2648:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2641:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2605:7:6",
														"type": ""
													}
												],
												"src": "2571:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2761:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2773:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2763:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2763:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2730:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2752:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2737:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2727:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:40:6"
															},
															"nodeType": "YulIf",
															"src": "2717:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2700:5:6",
														"type": ""
													}
												],
												"src": "2667:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2849:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2859:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2874:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2868:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2859:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2914:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2890:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2890:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2827:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2835:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2843:5:6",
														"type": ""
													}
												],
												"src": "2789:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3006:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3052:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3054:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3054:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3027:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3036:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3048:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:32:6"
															},
															"nodeType": "YulIf",
															"src": "3016:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3145:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3160:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3174:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3164:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3189:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3232:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3243:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3228:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3228:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3252:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3199:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3189:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2976:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2987:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2999:6:6",
														"type": ""
													}
												],
												"src": "2932:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3396:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3401:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3417:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3417:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3351:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3356:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3367:11:6",
														"type": ""
													}
												],
												"src": "3283:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3564:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3586:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:14:6"
																	},
																	{
																		"hexValue": "236f70657261746f72734f6e6c793a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3598:17:6",
																		"type": "",
																		"value": "#operatorsOnly:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3556:6:6",
														"type": ""
													}
												],
												"src": "3458:165:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3775:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3785:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3851:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3856:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3792:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3785:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3957:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2",
																	"nodeType": "YulIdentifier",
																	"src": "3868:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3868:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3970:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3981:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3986:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3970:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3763:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3771:3:6",
														"type": ""
													}
												],
												"src": "3629:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4172:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4182:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4194:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4190:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4182:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4229:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4240:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4225:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4225:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4248:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4218:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4218:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4274:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4408:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4282:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4282:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4274:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4152:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4167:4:6",
														"type": ""
													}
												],
												"src": "4001:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4454:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4474:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4464:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4464:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4568:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4571:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4561:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4592:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4585:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4426:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4660:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4670:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4693:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4675:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4670:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4704:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4727:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4709:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4709:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4704:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4738:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4761:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4764:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "4742:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4775:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "4804:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4786:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4775:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4993:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4995:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4995:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4995:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4926:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4919:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4919:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4949:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4956:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4965:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4952:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4952:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4946:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4946:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4899:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4899:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:113:6"
															},
															"nodeType": "YulIf",
															"src": "4876:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4643:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4646:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4652:7:6",
														"type": ""
													}
												],
												"src": "4612:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5056:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5073:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5076:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5066:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5170:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5163:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5197:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5187:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5028:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5256:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5266:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5271:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5266:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5300:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5323:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5305:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5300:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5347:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5349:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5344:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:9:6"
															},
															"nodeType": "YulIf",
															"src": "5334:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5379:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5391:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5379:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5245:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5248:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5254:1:6",
														"type": ""
													}
												],
												"src": "5214:185:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2(memPtr) {\n\n        mstore(add(memPtr, 0), \"#operatorsOnly:\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063412753581161005b57806341275358146100da5780636c852657146100f8578063a001ecdd14610128578063fae14192146101465761007d565b806308a300cb14610082578063285e1406146100a05780632f84c96f146100bc575b600080fd5b61008a610162565b60405161009791906104ef565b60405180910390f35b6100ba60048036038101906100b5919061053b565b610188565b005b6100c46102de565b6040516100d191906104ef565b60405180910390f35b6100e2610304565b6040516100ef91906104ef565b60405180910390f35b610112600480360381019061010d919061059e565b61032e565b60405161011f91906105da565b60405180910390f35b610130610360565b60405161013d91906105da565b60405180910390f35b610160600480360381019061015b919061059e565b610366565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d70f7ae336040518263ffffffff1660e01b81526004016101e391906104ef565b602060405180830381865afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061062d565b610263576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025a906106b7565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f65e29051085f9b7dd780038722c09ab1443e323345b86bd862699a2881757f0c816040516102d391906104ef565b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006103596103e861034b6000548561048290919063ffffffff16565b61049890919063ffffffff16565b9050919050565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d70f7ae336040518263ffffffff1660e01b81526004016103c191906104ef565b602060405180830381865afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061062d565b610441576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610438906106b7565b60405180910390fd5b806000819055507fc8c62ec399ed7e0e53a364f8097bd498861878e5529b22d32134a54d835a927e8160405161047791906105da565b60405180910390a150565b600081836104909190610706565b905092915050565b600081836104a69190610777565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d9826104ae565b9050919050565b6104e9816104ce565b82525050565b600060208201905061050460008301846104e0565b92915050565b600080fd5b610518816104ce565b811461052357600080fd5b50565b6000813590506105358161050f565b92915050565b6000602082840312156105515761055061050a565b5b600061055f84828501610526565b91505092915050565b6000819050919050565b61057b81610568565b811461058657600080fd5b50565b60008135905061059881610572565b92915050565b6000602082840312156105b4576105b361050a565b5b60006105c284828501610589565b91505092915050565b6105d481610568565b82525050565b60006020820190506105ef60008301846105cb565b92915050565b60008115159050919050565b61060a816105f5565b811461061557600080fd5b50565b60008151905061062781610601565b92915050565b6000602082840312156106435761064261050a565b5b600061065184828501610618565b91505092915050565b600082825260208201905092915050565b7f236f70657261746f72734f6e6c793a0000000000000000000000000000000000600082015250565b60006106a1600f8361065a565b91506106ac8261066b565b602082019050919050565b600060208201905081810360008301526106d081610694565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071182610568565b915061071c83610568565b925082820261072a81610568565b91508282048414831517610741576107406106d7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061078282610568565b915061078d83610568565b92508261079d5761079c610748565b5b82820490509291505056fea2646970667358221220212b30855a8937a8958ff531b596b48c76aacf764f9e4ad8c7aac0dc89310ce064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41275358 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x41275358 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x6C852657 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xFAE14192 EQ PUSH2 0x146 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8A300CB EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x285E1406 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x2F84C96F EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x53B JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x59E JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x65E29051085F9B7DD780038722C09AB1443E323345B86BD862699A2881757F0C DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359 PUSH2 0x3E8 PUSH2 0x34B PUSH1 0x0 SLOAD DUP6 PUSH2 0x482 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x498 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6D70F7AE CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH32 0xC8C62EC399ED7E0E53A364F8097BD498861878E5529B22D32134A54D835A927E DUP2 PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x777 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9 DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E9 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x504 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x4CE JUMP JUMPDEST DUP2 EQ PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x535 DUP2 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x551 JUMPI PUSH2 0x550 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x55F DUP5 DUP3 DUP6 ADD PUSH2 0x526 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57B DUP2 PUSH2 0x568 JUMP JUMPDEST DUP2 EQ PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x598 DUP2 PUSH2 0x572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C2 DUP5 DUP3 DUP6 ADD PUSH2 0x589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D4 DUP2 PUSH2 0x568 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60A DUP2 PUSH2 0x5F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x627 DUP2 PUSH2 0x601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x643 JUMPI PUSH2 0x642 PUSH2 0x50A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x651 DUP5 DUP3 DUP6 ADD PUSH2 0x618 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x236F70657261746F72734F6E6C793A0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A1 PUSH1 0xF DUP4 PUSH2 0x65A JUMP JUMPDEST SWAP2 POP PUSH2 0x6AC DUP3 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP PUSH2 0x71C DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x72A DUP2 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x741 JUMPI PUSH2 0x740 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x782 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 POP PUSH2 0x78D DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x748 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x2B ADDRESS DUP6 GAS DUP10 CALLDATACOPY 0xA8 SWAP6 DUP16 CREATE2 BALANCE 0xB5 SWAP7 0xB4 DUP13 PUSH23 0xAACF764F9E4AD8C7AAC0DC89310CE064736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "214:1278:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;891:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;357:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1058:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;393:31;;;;;;;;;;;;;:::o;891:161::-;589:15;;;;;;;;;;;579:37;;;617:10;579:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;990:11:::1;971:16;;:30;;;;;;;;;;;;;;;;;;1016:29;1033:11;1016:29;;;;;;:::i;:::-;;;;;;;;891:161:::0;:::o;357:30::-;;;;;;;;;;;;;:::o;1386:103::-;1440:7;1466:16;;;;;;;;;;;1459:23;;1386:103;:::o;1237:143::-;1308:7;1334:39;1368:4;1334:29;1349:13;;1334:10;:14;;:29;;;;:::i;:::-;:33;;:39;;;;:::i;:::-;1327:46;;1237:143;;;:::o;287:28::-;;;;:::o;1058:173::-;589:15;;;;;;;;;;;579:37;;;617:10;579:49;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;571:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1160:14:::1;1144:13;:30;;;;1189:35;1209:14;1189:35;;;;;;:::i;:::-;;;;;;;;1058:173:::0;:::o;3465:96:5:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:90::-;2605:7;2648:5;2641:13;2634:21;2623:32;;2571:90;;;:::o;2667:116::-;2737:21;2752:5;2737:21;:::i;:::-;2730:5;2727:32;2717:60;;2773:1;2770;2763:12;2717:60;2667:116;:::o;2789:137::-;2843:5;2874:6;2868:13;2859:22;;2890:30;2914:5;2890:30;:::i;:::-;2789:137;;;;:::o;2932:345::-;2999:6;3048:2;3036:9;3027:7;3023:23;3019:32;3016:119;;;3054:79;;:::i;:::-;3016:119;3174:1;3199:61;3252:7;3243:6;3232:9;3228:22;3199:61;:::i;:::-;3189:71;;3145:125;2932:345;;;;:::o;3283:169::-;3367:11;3401:6;3396:3;3389:19;3441:4;3436:3;3432:14;3417:29;;3283:169;;;;:::o;3458:165::-;3598:17;3594:1;3586:6;3582:14;3575:41;3458:165;:::o;3629:366::-;3771:3;3792:67;3856:2;3851:3;3792:67;:::i;:::-;3785:74;;3868:93;3957:3;3868:93;:::i;:::-;3986:2;3981:3;3977:12;3970:19;;3629:366;;;:::o;4001:419::-;4167:4;4205:2;4194:9;4190:18;4182:26;;4254:9;4248:4;4244:20;4240:1;4229:9;4225:17;4218:47;4282:131;4408:4;4282:131;:::i;:::-;4274:139;;4001:419;;;:::o;4426:180::-;4474:77;4471:1;4464:88;4571:4;4568:1;4561:15;4595:4;4592:1;4585:15;4612:410;4652:7;4675:20;4693:1;4675:20;:::i;:::-;4670:25;;4709:20;4727:1;4709:20;:::i;:::-;4704:25;;4764:1;4761;4757:9;4786:30;4804:11;4786:30;:::i;:::-;4775:41;;4965:1;4956:7;4952:15;4949:1;4946:22;4926:1;4919:9;4899:83;4876:139;;4995:18;;:::i;:::-;4876:139;4660:362;4612:410;;;;:::o;5028:180::-;5076:77;5073:1;5066:88;5173:4;5170:1;5163:15;5197:4;5194:1;5187:15;5214:185;5254:1;5271:20;5289:1;5271:20;:::i;:::-;5266:25;;5305:20;5323:1;5305:20;:::i;:::-;5300:25;;5344:1;5334:35;;5349:18;;:::i;:::-;5334:35;5391:1;5388;5384:9;5379:14;;5214:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "402800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeFeeAddress(address)": "infinite",
								"changeFeePercentage(uint256)": "infinite",
								"feeAddress()": "2522",
								"feeAmount(uint256)": "infinite",
								"feePercentage()": "2473",
								"feeWalletAddress()": "2515",
								"operatorManager()": "2559"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 672,
									"end": 885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 672,
									"end": 885,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 782,
									"end": 798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 764,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 798,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 764,
									"end": 798,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 798,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 798,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 764,
									"end": 798,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 827,
									"end": 838,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 808,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 808,
									"end": 824,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 838,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 808,
									"end": 838,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 808,
									"end": 838,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 808,
									"end": 838,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 808,
									"end": 838,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 864,
									"end": 878,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 848,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 848,
									"end": 878,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 848,
									"end": 878,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 848,
									"end": 878,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 848,
									"end": 878,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 885,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1492,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220212b30855a8937a8958ff531b596b48c76aacf764f9e4ad8c7aac0dc89310ce064736f6c63430008120033",
									".code": [
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "41275358"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "41275358"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "6C852657"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "A001ECDD"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "FAE14192"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "8A300CB"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "285E1406"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "2F84C96F"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 1492,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 393,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 393,
											"end": 424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 891,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 891,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1386,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1386,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1237,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1237,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1237,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 287,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 287,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1058,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1058,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 424,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 393,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "6D70F7AE"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 579,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 579,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 571,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 971,
											"end": 987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "65E29051085F9B7DD780038722C09AB1443E323345B86BD862699A2881757F0C"
										},
										{
											"begin": 1033,
											"end": 1044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1016,
											"end": 1045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1045,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 891,
											"end": 1052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 357,
											"end": 387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 357,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1466,
											"end": 1482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1368,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1334,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1334,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1334,
											"end": 1367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1334,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1237,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 287,
											"end": 315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 589,
											"end": 604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 579,
											"end": 616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "6D70F7AE"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 579,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 579,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 579,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 579,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 571,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 571,
											"end": 648,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 571,
											"end": 648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1174,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C8C62EC399ED7E0E53A364F8097BD498861878E5529B22D32134A54D835A927E"
										},
										{
											"begin": 1209,
											"end": 1223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1189,
											"end": 1224,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1224,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2306,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2557,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2487,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2487,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2571,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2655,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2667,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2752,
											"end": 2757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2737,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2758,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2737,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2717,
											"end": 2777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2775,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2777,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2717,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2890,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2890,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3034,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3051,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3135,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3016,
											"end": 3135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3054,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3054,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3016,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3252,
											"end": 3259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3228,
											"end": 3250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3199,
											"end": 3260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3260,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3199,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 3277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3432,
											"end": 3446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3623,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3458,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "236F70657261746F72734F6E6C793A0000000000000000000000000000000000"
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3575,
											"end": 3616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3995,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3629,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3792,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3792,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3792,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3957,
											"end": 3960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3868,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3961,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3868,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 3988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4420,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4001,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4225,
											"end": 4242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4282,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4413,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4282,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4606,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4426,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4474,
											"end": 4551,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4471,
											"end": 4472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4568,
											"end": 4569,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4561,
											"end": 4576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4599,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4592,
											"end": 4593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4693,
											"end": 4694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4675,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4675,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4709,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4729,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4709,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4804,
											"end": 4815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4786,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4786,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4952,
											"end": 4967,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4968,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4982,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4876,
											"end": 5015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4995,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 5015,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4876,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 5022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5208,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5028,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5153,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5066,
											"end": 5154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5170,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5163,
											"end": 5178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5197,
											"end": 5201,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5202,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5271,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5271,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5323,
											"end": 5324,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5305,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5334,
											"end": 5369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5349,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5334,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5393,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/fee/FeeManager.sol",
								"contracts/fee/IFeeManager.sol",
								"contracts/operator/IOperator.sol",
								"contracts/utils/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changeFeeAddress(address)": "285e1406",
							"changeFeePercentage(uint256)": "fae14192",
							"feeAddress()": "41275358",
							"feeAmount(uint256)": "6c852657",
							"feePercentage()": "a001ecdd",
							"feeWalletAddress()": "08a300cb",
							"operatorManager()": "2f84c96f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"ChangeFeeAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"ChangeFeePercentage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"changeFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercentage\",\"type\":\"uint256\"}],\"name\":\"changeFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"}],\"name\":\"feeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fee/FeeManager.sol\":\"FeeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/fee/FeeManager.sol\":{\"keccak256\":\"0xe3f6f0b9ee1c89654d23b8971329a279efbec28eedf1165f01d4e7a8df60f825\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a29fbd9e80ad4f0114a6fd897bc95cf7009d7216aaf663e0a49c05b1b4e98d2e\",\"dweb:/ipfs/QmW9DNJg2aR1YhFVwPirPiH8XLMdUeUnQ5eUWZsz4MsrwH\"]},\"contracts/fee/IFeeManager.sol\":{\"keccak256\":\"0x736e95e4e26c3b1a54ba6a9bbbbc992495c0b7d43ee6fbc15fa8bd7f6853aa49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://708493f32e039e02bbd88c784f0c2b2ba4b5bf7f3ec6cca791bf67fce5fb2dde\",\"dweb:/ipfs/QmcNnTuQUhsuJQgE74oksPyYwvrBfmcF6vbRfVF6Su8fbn\"]},\"contracts/operator/IOperator.sol\":{\"keccak256\":\"0x2e8091e6b65d82aae81dbf80ede9f2ecabc51578d0ab28a7de0512e6c9e62de2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d3fc3f7043457adeff3aee478c6515315d6b272985979d0d8ecb2be05c214196\",\"dweb:/ipfs/QmcoM2gaK2AE59GGGb6afdGhjxvMDgbwGrY1vk8ocWnKmX\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 155,
								"contract": "contracts/fee/FeeManager.sol:FeeManager",
								"label": "feePercentage",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 157,
								"contract": "contracts/fee/FeeManager.sol:FeeManager",
								"label": "operatorManager",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 159,
								"contract": "contracts/fee/FeeManager.sol:FeeManager",
								"label": "feeWalletAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/fee/IFeeManager.sol": {
				"IFeeManager": {
					"abi": [
						{
							"inputs": [],
							"name": "feeAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "feeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeAddress()": "41275358",
							"feeAmount(uint256)": "6c852657"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"feeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fee/IFeeManager.sol\":\"IFeeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fee/IFeeManager.sol\":{\"keccak256\":\"0x736e95e4e26c3b1a54ba6a9bbbbc992495c0b7d43ee6fbc15fa8bd7f6853aa49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://708493f32e039e02bbd88c784f0c2b2ba4b5bf7f3ec6cca791bf67fce5fb2dde\",\"dweb:/ipfs/QmcNnTuQUhsuJQgE74oksPyYwvrBfmcF6vbRfVF6Su8fbn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/operator/IOperator.sol": {
				"IOperator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator(address)": "6d70f7ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/operator/IOperator.sol\":\"IOperator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/operator/IOperator.sol\":{\"keccak256\":\"0x2e8091e6b65d82aae81dbf80ede9f2ecabc51578d0ab28a7de0512e6c9e62de2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d3fc3f7043457adeff3aee478c6515315d6b272985979d0d8ecb2be05c214196\",\"dweb:/ipfs/QmcoM2gaK2AE59GGGb6afdGhjxvMDgbwGrY1vk8ocWnKmX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122090674475877e70ef22316bdd348623206d0d926cea919f796df1104d8322c9c864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122090674475877e70ef22316bdd348623206d0d926cea919f796df1104d8322c9c864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH8 0x4475877E70EF2231 PUSH12 0xDD348623206D0D926CEA919F PUSH26 0x6DF1104D8322C9C864736F6C6343000812003300000000000000 ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122090674475877e70ef22316bdd348623206d0d926cea919f796df1104d8322c9c864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH8 0x4475877E70EF2231 PUSH12 0xDD348623206D0D926CEA919F PUSH26 0x6DF1104D8322C9C864736F6C6343000812003300000000000000 ",
							"sourceMap": "482:6210:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090674475877e70ef22316bdd348623206d0d926cea919f796df1104d8322c9c864736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/fee/FeeManager.sol",
								"contracts/fee/IFeeManager.sol",
								"contracts/operator/IOperator.sol",
								"contracts/utils/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							142
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 143,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 142,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								142
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "717:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "727:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:1"
									},
									"scope": 142,
									"src": "655:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "824:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "834:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "808:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:1"
									},
									"scope": 142,
									"src": "757:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "934:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "944:8:1"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "925:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:1"
									},
									"scope": 142,
									"src": "862:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 143,
							"src": "623:338:1",
							"usedErrors": []
						}
					],
					"src": "101:861:1"
				},
				"id": 1
			},
			"contracts/fee/FeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/fee/FeeManager.sol",
					"exportedSymbols": {
						"Context": [
							142
						],
						"FeeManager": [
							263
						],
						"IFeeManager": [
							278
						],
						"IOperator": [
							288
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							600
						]
					},
					"id": 264,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 113,
							"src": "64:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/fee/IFeeManager.sol",
							"file": "./IFeeManager.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 279,
							"src": "117:27:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/operator/IOperator.sol",
							"file": "../operator/IOperator.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 289,
							"src": "145:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeMath.sol",
							"file": "../utils/SafeMath.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 601,
							"src": "181:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 149,
										"name": "IFeeManager",
										"nameLocations": [
											"237:11:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 278,
										"src": "237:11:2"
									},
									"id": 150,
									"nodeType": "InheritanceSpecifier",
									"src": "237:11:2"
								}
							],
							"canonicalName": "FeeManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								278
							],
							"name": "FeeManager",
							"nameLocation": "223:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 153,
									"libraryName": {
										"id": 151,
										"name": "SafeMath",
										"nameLocations": [
											"261:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 600,
										"src": "261:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "255:27:2",
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "a001ecdd",
									"id": 155,
									"mutability": "mutable",
									"name": "feePercentage",
									"nameLocation": "302:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "287:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f84c96f",
									"id": 157,
									"mutability": "mutable",
									"name": "operatorManager",
									"nameLocation": "372:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "357:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 156,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "357:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08a300cb",
									"id": 159,
									"mutability": "mutable",
									"name": "feeWalletAddress",
									"nameLocation": "408:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "393:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "65e29051085f9b7dd780038722c09ab1443e323345b86bd862699a2881757f0c",
									"id": 163,
									"name": "ChangeFeeAddress",
									"nameLocation": "437:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "462:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "454:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:21:2"
									},
									"src": "431:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "c8c62ec399ed7e0e53a364f8097bd498861878e5529b22d32134a54d835a927e",
									"id": 167,
									"name": "ChangeFeePercentage",
									"nameLocation": "486:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_feePercentage",
												"nameLocation": "514:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "506:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:24:2"
									},
									"src": "480:50:2"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "561:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 174,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "617:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "621:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "617:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 171,
																			"name": "operatorManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 157,
																			"src": "589:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 170,
																		"name": "IOperator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "579:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IOperator_$288_$",
																			"typeString": "type(contract IOperator)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "579:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IOperator_$288",
																		"typeString": "contract IOperator"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "606:10:2",
																"memberName": "isOperator",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 287,
																"src": "579:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "579:49:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "236f70657261746f72734f6e6c793a",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "630:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2",
																"typeString": "literal_string \"#operatorsOnly:\""
															},
															"value": "#operatorsOnly:"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b3906c28f91168b78c1e06f590c9379c06611d578b40ebb1c77d4158492dca2",
																"typeString": "literal_string \"#operatorsOnly:\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "571:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "571:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "571:77:2"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "658:1:2"
											}
										]
									},
									"id": 182,
									"name": "operatorsOnly",
									"nameLocation": "545:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:2"
									},
									"src": "536:130:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "754:131:2",
										"statements": [
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 191,
														"name": "operatorManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "764:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 192,
														"name": "_operatorManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "782:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "764:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "764:34:2"
											},
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "feeWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "808:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "827:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "808:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "808:30:2"
											},
											{
												"expression": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "848:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 200,
														"name": "_feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "864:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "848:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "848:30:2"
											}
										]
									},
									"id": 204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_operatorManager",
												"nameLocation": "692:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "684:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "718:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "710:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_feePercentage",
												"nameLocation": "739:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "731:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:71:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:2"
									},
									"scope": 263,
									"src": "672:213:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "961:91:2",
										"statements": [
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "feeWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "971:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 212,
														"name": "_feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "990:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "971:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "971:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 216,
															"name": "_feeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1033:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "ChangeFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "1016:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "EmitStatement",
												"src": "1011:34:2"
											}
										]
									},
									"functionSelector": "285e1406",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 208,
												"name": "operatorsOnly",
												"nameLocations": [
													"947:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "947:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "947:13:2"
										}
									],
									"name": "changeFeeAddress",
									"nameLocation": "900:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_feeAddress",
												"nameLocation": "925:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "917:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:21:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:2"
									},
									"scope": 263,
									"src": "891:161:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "1134:97:2",
										"statements": [
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1144:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "_feePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1160:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1144:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1144:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 232,
															"name": "_feePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "1209:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 231,
														"name": "ChangeFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1189:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "EmitStatement",
												"src": "1184:40:2"
											}
										]
									},
									"functionSelector": "fae14192",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "operatorsOnly",
												"nameLocations": [
													"1120:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "1120:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:13:2"
										}
									],
									"name": "changeFeePercentage",
									"nameLocation": "1067:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "_feePercentage",
												"nameLocation": "1095:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1087:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:24:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1134:0:2"
									},
									"scope": 263,
									"src": "1058:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										272
									],
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1317:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 246,
																	"name": "feePercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1349:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 244,
																	"name": "_feeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "1334:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1345:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 494,
																"src": "1334:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1334:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1364:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 509,
														"src": "1334:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 243,
												"id": 251,
												"nodeType": "Return",
												"src": "1327:46:2"
											}
										]
									},
									"functionSelector": "6c852657",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmount",
									"nameLocation": "1246:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 240,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1290:8:2"
									},
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_feeAmount",
												"nameLocation": "1264:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1256:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:20:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1308:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:9:2"
									},
									"scope": 263,
									"src": "1237:143:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										277
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1449:40:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "feeWalletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 159,
													"src": "1466:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "1459:23:2"
											}
										]
									},
									"functionSelector": "41275358",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeAddress",
									"nameLocation": "1395:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 255,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1422:8:2"
									},
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1440:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:9:2"
									},
									"scope": 263,
									"src": "1386:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "214:1278:2",
							"usedErrors": []
						}
					],
					"src": "39:1454:2"
				},
				"id": 2
			},
			"contracts/fee/IFeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/fee/IFeeManager.sol",
					"exportedSymbols": {
						"IFeeManager": [
							278
						]
					},
					"id": 279,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFeeManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "IFeeManager",
							"nameLocation": "74:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6c852657",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmount",
									"nameLocation": "101:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "119:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "111:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:17:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "151:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:9:3"
									},
									"scope": 278,
									"src": "92:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "41275358",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAddress",
									"nameLocation": "174:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "210:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:9:3"
									},
									"scope": 278,
									"src": "165:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 279,
							"src": "64:157:3",
							"usedErrors": []
						}
					],
					"src": "39:183:3"
				},
				"id": 3
			},
			"contracts/operator/IOperator.sol": {
				"ast": {
					"absolutePath": "contracts/operator/IOperator.sol",
					"exportedSymbols": {
						"IOperator": [
							288
						]
					},
					"id": 289,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOperator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 288,
							"linearizedBaseContracts": [
								288
							],
							"name": "IOperator",
							"nameLocation": "74:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6d70f7ae",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "99:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "118:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "110:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:18:4"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "151:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "151:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:6:4"
									},
									"scope": 288,
									"src": "90:67:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 289,
							"src": "64:95:4",
							"usedErrors": []
						}
					],
					"src": "39:121:4"
				},
				"id": 4
			},
			"contracts/utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							600
						]
					},
					"id": 601,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 291,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 600,
							"linearizedBaseContracts": [
								600
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 321,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															304
														],
														"declarations": [
															{
																"constant": false,
																"id": 304,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 321,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 308,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 306,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 302,
															"id": 315,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 318,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 319,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 302,
														"id": 320,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 600,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 349,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 335,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 336,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 342,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 340,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 341,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 344,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 345,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 347,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 348,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 600,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 391,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 370,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 368,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 362,
															"id": 369,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															372
														],
														"declarations": [
															{
																"constant": false,
																"id": 372,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 391,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 371,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 376,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 377,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 378,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 386,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 362,
															"id": 385,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 362,
														"id": 390,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 600,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 419,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 412,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 404,
															"id": 411,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 414,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 415,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 417,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 404,
														"id": 418,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 600,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 440,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 432,
															"id": 439,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 442,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 443,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 445,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 432,
														"id": 446,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 428,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 600,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 460,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 462,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 600,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 474,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 475,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 477,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 600,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 490,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 488,
												"id": 492,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 600,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 504,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 505,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 507,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 600,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 600,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "5054:106:5",
										"statements": [
											{
												"id": 547,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 537,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "5096:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 538,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "5101:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 540,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "5104:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 536,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 542,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 543,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "5138:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 544,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "5142:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 535,
														"id": 546,
														"nodeType": "Return",
														"src": "5131:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "4972:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "4994:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 530,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:5"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "5045:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:5"
									},
									"scope": 600,
									"src": "4959:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "5739:105:5",
										"statements": [
											{
												"id": 572,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 562,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "5781:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 565,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "5788:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 561,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "5822:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 569,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "5826:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 560,
														"id": 571,
														"nodeType": "Return",
														"src": "5815:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5679:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:5"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "5730:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:5"
									},
									"scope": 600,
									"src": "5644:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "6585:105:5",
										"statements": [
											{
												"id": 597,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 587,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "6627:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 590,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "6634:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 586,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "6668:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 594,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "6672:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 585,
														"id": 596,
														"nodeType": "Return",
														"src": "6661:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "6503:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "6525:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:5"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "6576:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:5"
									},
									"scope": 600,
									"src": "6490:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 601,
							"src": "482:6210:5",
							"usedErrors": []
						}
					],
					"src": "107:6586:5"
				},
				"id": 5
			}
		}
	}
}